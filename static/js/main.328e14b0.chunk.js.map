{"version":3,"sources":["components/Captcha.js","data/estados.js","components/Form.js","helpers/getAge.js","components/Form2.js","components/Captcha2.js","components/Inicio.js","components/Exito.js","App.js","index.js"],"names":["Captcha","setPantalla","useState","counter","setCounter","useEffect","intervalID","setInterval","console","log","window","clearInterval","className","sitekey","onChange","onClick","estados","Form","msgError","setMsgError","formik","useFormik","initialValues","nombre","apellido1","apellido2","sexo","nacimiento","localidad","email","email2","validationSchema","Yup","matches","required","onSubmit","valores","setTimeout","edad","DOB","today","Date","birthDate","age","getFullYear","m","getMonth","getDate","getAge","mensajeValidar","valor","touched","errors","handleSubmit","htmlFor","type","name","handleChange","onBlur","handleBlur","value","map","estado","index","disabled","bancos","Form2","cuenta","banco","mes","anio","cvu","cantidad","cantidad2","length","min","max","id","step","Captcha2","palabra","setPalabra","input","setInput","width","charNum","placeholder","target","Inicio","Exito","App","pantalla","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.328e14b0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nconst clavePublica = '6LdzUBgbAAAAABwk_lzcuqd9NMswwbMNZUIIX_aP';\r\n\r\nexport const Captcha = ({ setPantalla }) => {\r\n      \r\n\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const intervalID = setInterval(()=> {\r\n            setCounter( counter + 1 )\r\n            console.log('interval');\r\n        }, 1000);\r\n\r\n        return () => {\r\n            window.clearInterval( intervalID );\r\n        }\r\n\r\n    }, [counter])\r\n\r\n    if( counter > 10 ){\r\n        setPantalla( 1 );\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-white w-full sm:w-96 m-auto mt-20 p-4 rounded shadow\">\r\n            <p className=\"font-bold mb-8 text-center text-xl\">Completa el catpcha</p>\r\n            <p className=\"text-2xl\">{ counter }</p>\r\n            <ReCAPTCHA\r\n                sitekey={ clavePublica }\r\n                onChange={ ()=> setPantalla( 4 ) }\r\n            />\r\n\r\n            <button \r\n                className=\"bg-red-500 hover:bg-red-600 cursor-pointer text-white p-2 mr-0 mt-4\"\r\n                onClick={ ()=> setPantalla( 1 ) }\r\n            >\r\n            Cancelar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const estados = [\"Aguascalientes\", \"Baja California\", \"Baja California Sur\", \"Campeche\", \"Coahuila de Zaragoza\", \"Colima\", \"Chiapas\", \"Chihuahua\", \"Distrito Federal\", \"Durango\", \"Guanajuato\", \"Guerrero\", \"Hidalgo\", \"Jalisco\", \"México\", \"Michoacán de Ocampo\", \"Morelos\", \"Nayarit\", \"Nuevo León\", \"Oaxaca\", \"Puebla\", \"Querétaro\", \"Quintana Roo\", \"San Luis Potosí\", \"Sinaloa\", \"Sonora\", \"Tabasco\", \"Tamaulipas\", \"Tlaxcala\", \"Veracruz de Ignacio de la Llave\", \"Yucatán\", \"Zacatecas\"];","import React, { useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { estados } from '../data/estados';\r\nimport { getAge } from '../helpers/getAge';\r\n\r\nconst Form = ({ setPantalla }) => {\r\n\r\n    const [msgError, setMsgError] = useState( null );\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            nombre: '',\r\n            apellido1: '',\r\n            apellido2: '',\r\n            sexo: 'M',\r\n            nacimiento: '',\r\n            localidad: '',\r\n            email: '',\r\n            email2: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            nombre: Yup.string()\r\n                .matches(/^[a-zA-ZñÑüÜÁÉÍÓÚáéíóú ]+$/ig,'¡Dato Incorrecto...!')\r\n                .required('El nombre no puede ir vacio'),\r\n            apellido1: Yup.string()\r\n                .matches(/^[a-zA-ZñÑüÜÁÉÍÓÚáéíóú ]+$/ig,'¡Dato Incorrecto...!')\r\n                .required('El apellido no puede ir vacio'),\r\n            apellido2: Yup.string()\r\n                .matches(/^[a-zA-ZñÑüÜÁÉÍÓÚáéíóú ]+$/ig,'¡Dato Incorrecto...!')\r\n                .required('El apellido no puede ir vacio'),\r\n            localidad: Yup.string()\r\n                .matches(/^[a-zA-ZñÑüÜÁÉÍÓÚáéíóú. ]+$/ig,'¡Dato Incorrecto...!')\r\n                .required('La localidad no puede ir vacio'),\r\n            email: Yup.string()\r\n                .email('el email no es valido')\r\n                .required('El email no puede ir vacio'),\r\n            email2: Yup.string()\r\n                .email('el email no es valido')\r\n                .required('El email no puede ir vacio')\r\n        }),\r\n        onSubmit: valores =>{\r\n\r\n            if( valores.email !== valores.email2 ){\r\n                setMsgError('los correos no coinciden');\r\n                return setTimeout(()=> setMsgError(null), 3000);\r\n            }\r\n\r\n            const edad =  getAge( valores.nacimiento )\r\n\r\n            if( typeof edad !== 'number' || !valores.nacimiento){\r\n                setMsgError('Introduce una fecha valida');\r\n                return setTimeout(()=> setMsgError(null), 3000);\r\n            }\r\n            if( edad < 18){\r\n                setMsgError('Usted no puede realizar este tipo de trámite');\r\n                return setTimeout(()=> setMsgError(null), 3000);\r\n            }\r\n\r\n            setPantalla( 3 );\r\n\r\n        }\r\n    });\r\n\r\n    const mensajeValidar = valor =>(\r\n        formik.touched[valor] && formik.errors[valor] ?(\r\n            <div className=\"my-1 bg-red-100 border-l-4 border-red-500 text-red-700 px-2\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{ formik.errors[valor] }</p>\r\n            </div>\r\n        ): null \r\n    )\r\n\r\n    return (\r\n        <div className=\"bg-white w-full sm:w-96 m-auto mt-20 p-4 rounded shadow\">\r\n\r\n            <h1 className=\"font-bold mb-8 text-center text-xl\">Cobros/Depósitos de Pagos Ántrax S.A. de C.V.</h1>\r\n\r\n            <form onSubmit={ formik.handleSubmit }>\r\n\r\n                { msgError && <p className=\"my-1 bg-red-100 border-l-4 border-red-500 text-red-700 px-2\">{ msgError }</p> }\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"nombre\">nombre</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"text\" \r\n                        name=\"nombre\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                    />\r\n                </div>\r\n                { mensajeValidar('nombre')}\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"apellido1\">primer apellido</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"text\" \r\n                        name=\"apellido1\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        />\r\n                </div>\r\n                { mensajeValidar('apellido1')}\r\n                \r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"apellido2\">segundo apellido</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"text\" \r\n                        name=\"apellido2\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        />\r\n                </div>\r\n                { mensajeValidar('apellido2')}\r\n                \r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"sexo\">sexo</label>\r\n                    <select \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        name=\"sexo\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        >\r\n                        <option value=\"M\">Masculino</option>\r\n                        <option value=\"F\">Femenino</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"nacimiento\">fecha de nacimiento</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"date\" \r\n                        name=\"nacimiento\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        />\r\n                </div>\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"estado\">estado</label>\r\n                    <select \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        name=\"estado\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                    >\r\n                        {\r\n                            estados.map( (estado, index)=>(\r\n                                <option key={ index } value={estado}>{ estado }</option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"localidad\">localidad</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"text\" \r\n                        name=\"localidad\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                    />\r\n                </div>\r\n                { mensajeValidar('localidad')}\r\n                \r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"pais\">pais</label>\r\n                    <select \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        name=\"pais\"\r\n                        >\r\n                        <option value=\"mexico\">México</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"email\">email</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"text\" \r\n                        name=\"email\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                    />\r\n                </div>\r\n                { mensajeValidar('email')}\r\n                \r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"email2\">confirma email</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"text\" \r\n                        name=\"email2\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                    />\r\n                </div>\r\n                { mensajeValidar('email2')}\r\n                \r\n                <input \r\n                    className={`bg-green-500 hover:bg-green-600 cursor-pointer text-white p-2 ${ msgError && 'bg-green-400'}`}\r\n                    type=\"submit\"\r\n                    value=\"Aceptar\"\r\n                    disabled={ msgError }\r\n                />\r\n\r\n                <input \r\n                    className=\"bg-red-500 hover:bg-red-600 cursor-pointer text-white p-2 ml-2\"\r\n                    type=\"button\"\r\n                    value=\"Cancelar\"\r\n                    onClick={ ()=> setPantalla( 1 ) }\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n\r\n","export const getAge = (DOB) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(DOB);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }    \r\n    return age;\r\n}","import React, { useState } from 'react'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst bancos = ['BBVA Bancomer','Banorte','Banamex','Santander','Scotiabank','HSBC','Inbursa',          \r\n'Banco del Bajío','Afirme','Banco Azteca','American Express','Scotiabank'];\r\n\r\nconst Form2 = ({ setPantalla }) => {\r\n\r\n    const [msgError, setMsgError] = useState( null );\r\n\r\n    const formik = useFormik({\r\n        initialValues:{\r\n            cuenta: '',\r\n            banco: '',\r\n            mes: '12',\r\n            anio: '2021',\r\n            cvu: '',\r\n            cantidad: '',\r\n            cantidad2: '',\r\n        },\r\n        validationSchema: Yup.object({\r\n            cuenta: Yup.string()\r\n                .matches(/^[0-9]+$/ig,'¡Dato Incorrecto...!')\r\n                .required('El numero de cuenta no puede ir vacio')\r\n                .length(16,'deben ser 16 digitos'),\r\n            cvu: Yup.string()\r\n                .matches(/^[0-9]+$/ig,'¡Dato Incorrecto...!')\r\n                .required('El cvu no puede ir vacio')\r\n                .length(3,'deben ser 3 digitos'),\r\n            cantidad: Yup.number()\r\n                .min(1,'debe ser mayor a 0')\r\n                .max(9999.99,'cantidad maxima superada!')\r\n                .required('El numero de cuenta no puede ir vacio'),\r\n            cantidad2: Yup.number()\r\n                .min(1,'debe ser mayor a 0')\r\n                .max(9999.99,'cantidad maxima superada!')\r\n                .required('El numero de cuenta no puede ir vacio')\r\n                \r\n        }),\r\n        onSubmit: valores =>{\r\n            if( valores.cantidad !== valores.cantidad2 ){\r\n                setMsgError('la cantidad no coincide');\r\n                return setTimeout(()=> setMsgError(null), 3000);\r\n            }\r\n\r\n            setPantalla( 5 )\r\n        }\r\n    });\r\n\r\n    const mensajeValidar = valor =>(\r\n        formik.touched[valor] && formik.errors[valor] ?(\r\n            <div className=\"my-1 bg-red-100 border-l-4 border-red-500 text-red-700 px-2\">\r\n                <p className=\"font-bold\">Error</p>\r\n                <p>{ formik.errors[valor] }</p>\r\n            </div>\r\n        ): null \r\n    )\r\n\r\n    return (\r\n        <div className=\"bg-white w-full sm:w-96 m-auto mt-20 p-4 rounded shadow\">\r\n\r\n            <form onSubmit={ formik.handleSubmit }>\r\n\r\n                { msgError && <p className=\"my-1 bg-red-100 border-l-4 border-red-500 text-red-700 px-2\">{ msgError }</p> }\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"cuenta\">cuenta</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"number\" \r\n                        name=\"cuenta\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        />\r\n                </div>\r\n                { mensajeValidar('cuenta')}\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"banco\">banco</label>\r\n                    <select \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        name=\"banco\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        >\r\n                            {\r\n                                bancos.map( (banco,index) =>(\r\n                                    <option key={index} value={banco}>{ banco }</option>\r\n                                ))\r\n                            }        \r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"expiracion\">fecha de expiración</label>\r\n                    \r\n                    <label htmlFor=\"mes\">mes</label>\r\n                    <select \r\n                        className=\"shadow-xl border-2 rounded\" \r\n                        name=\"mes\" id=\"mes\">\r\n                        <option value=\"01\">01</option>\r\n                        <option value=\"02\">02</option>\r\n                        <option value=\"03\">03</option>\r\n                        <option value=\"04\">04</option>\r\n                        <option value=\"05\">05</option>\r\n                        <option value=\"06\">06</option>\r\n                        <option value=\"07\">07</option>\r\n                        <option value=\"08\">08</option>\r\n                        <option value=\"09\">09</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"11\">11</option>\r\n                        <option value=\"12\">12</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"anio\">año</label>\r\n                    <select \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        name=\"anio\" id=\"anio\">\r\n                        <option value=\"2020\">2020</option>\r\n                        <option value=\"2021\">2021</option>\r\n                        <option value=\"2022\">2022</option>\r\n                        <option value=\"2023\">2023</option>\r\n                        <option value=\"2024\">2024</option>\r\n                        <option value=\"2025\">2025</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"cvu\">cvu</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"number\" \r\n                        name=\"cvu\"\r\n                        max=\"999\"\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        />\r\n                </div>\r\n                { mensajeValidar('cvu')}\r\n                            \r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"cantidad\">cantidad a transferir</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"number\" \r\n                        name=\"cantidad\"\r\n                        step='0.01'\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        />\r\n                </div>\r\n                { mensajeValidar('cantidad') }\r\n\r\n                <div className=\"flex justify-between mt-2\">\r\n                    <label htmlFor=\"cantidad2\">confirmar cantidad</label>\r\n                    <input \r\n                        className=\"shadow-xl border-2 rounded ml-2\" \r\n                        type=\"number\" \r\n                        name=\"cantidad2\"\r\n                        step='0.01'\r\n                        onChange={ formik.handleChange }\r\n                        onBlur={ formik.handleBlur }\r\n                        />\r\n                </div>\r\n                { mensajeValidar('cantidad2') }\r\n                \r\n                \r\n                <input \r\n                    className={`bg-green-500 hover:bg-green-600 cursor-pointer text-white p-2 ${ !!msgError && 'bg-green-200'}`}\r\n                    type=\"submit\"\r\n                    value=\"Aceptar\"\r\n                    disabled={ !!msgError }\r\n                />\r\n\r\n                <input \r\n                    className=\"bg-red-500 hover:bg-red-600 cursor-pointer text-white p-2 ml-2\"\r\n                    type=\"button\"\r\n                    value=\"Cancelar\"\r\n                    onClick={ ()=> setPantalla( 1 ) }\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form2\r\n\r\n","import {useState } from 'react';\r\nimport CaptchaLi from 'react-captcha-code';\r\n\r\nexport const Captcha2 = ({ setPantalla }) => {\r\n\r\n    const [palabra, setPalabra] = useState( null );\r\n    const [input, setInput] = useState( '' );\r\n    const [msgError, setMsgError] = useState( null );\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setPalabra( value )\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if( input !== palabra ){\r\n            setMsgError('esta mal, vuelve a intentar');\r\n            return setTimeout(()=> setMsgError(null), 3000);\r\n        }\r\n\r\n        setPantalla( 6 )\r\n    }\r\n      \r\n    return (\r\n        <div className=\"bg-white w-full sm:w-96 m-auto mt-20 p-4 rounded shadow\">\r\n            <p className=\"font-bold mb-8 text-center text-xl\">Completa el catpcha</p>\r\n            { msgError && <p className=\"my-1 bg-red-100 border-l-4 border-red-500 text-red-700 px-2\">{ msgError }</p> }\r\n\r\n            <div>\r\n                click en la imagen para cambiar \r\n                <CaptchaLi \r\n                    width={200}\r\n                    charNum={ 4 } \r\n                    onChange={handleChange} \r\n                    />\r\n                <span className=\"relative bottom-14 text-xl cursor-pointer z--1\">⟳</span>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"escribe aqui\"\r\n                    className=\"shadow-xl border-2 rounded my-2\"\r\n                    value={ input }\r\n                    onChange={ ({target})=> setInput( target.value ) }\r\n                />\r\n            </div>\r\n\r\n            <button \r\n                className={`bg-blue-500 hover:bg-blue-600 cursor-pointer text-white p-2 mr-2`} \r\n                onClick={ handleClick }\r\n            >Aceptar</button>\r\n\r\n            <button \r\n                className=\"bg-red-500 hover:bg-red-600 cursor-pointer text-white p-2 mr-0 mt-4\"\r\n                onClick={ ()=> setPantalla( 1 ) }\r\n            >\r\n                Cancelar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Inicio = ({ setPantalla }) => {\r\n\r\n    return (\r\n        <div className=\"bg-white w-full sm:w-96 m-auto mt-20 p-4 rounded shadow flex flex-col\">\r\n            <p className=\"font-bold mb-8 text-center text-xl\">Programa 2</p>\r\n\r\n            <button \r\n                className=\"bg-yellow-400 hover:bg-yellow-500 cursor-pointer text-white p-2 mr-0 mt-4 block\"\r\n                onClick={ ()=> setPantalla( 2 ) }\r\n            >\r\n                Iniciar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Exito = ({ setPantalla }) => {\r\n\r\n    setTimeout(()=> setPantalla( 1 ),3000);\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"bg-black w-full sm:w-96 m-auto mt-20 p-4 rounded shadow flex flex-col\">\r\n                <h3 className=\"text-white text-2xl text-center\">Envió realizado correctamente</h3>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState } from 'react';\r\nimport { Captcha } from './components/Captcha';\r\nimport Form from './components/Form';\r\nimport Form2 from './components/Form2';\r\nimport { Captcha2 } from './components/Captcha2';\r\nimport { Inicio } from './components/Inicio';\r\nimport { Exito } from './components/Exito';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [pantalla, setPantalla] = useState( 4 );\r\n\r\n  switch ( pantalla ) {\r\n    case 1:\r\n      return <Inicio  setPantalla={ setPantalla }/>\r\n    case 2:\r\n      return <Form    setPantalla={ setPantalla }/>\r\n    case 3:\r\n      return <Captcha  setPantalla={ setPantalla }/>\r\n    case 4:\r\n      return <Form2    setPantalla={ setPantalla }/>\r\n    case 5:\r\n      return <Captcha2 setPantalla={ setPantalla }/>\r\n    case 6:\r\n      return <Exito    setPantalla={ setPantalla }/>\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}